#!/bin/bash

#
# fetch-dotfiles: fetch a set of dotfiles and unpack them to the current user's
# home directory
#

arg0=$(basename $0)

function usage
{
	cat <<-EOF >&2
usage: $arg0 [-f] [-L LOCAL_PATH] [-R REMOTE_PATH] LABEL

Fetches dotfiles from /\$MANTA_USER/public/lib/dotfiles/LABEL and unpacks them
into your home directory.  Without -f, does a dry run, which shows you what
would be changed (including diffs between dotfiles).

Options:

    -f			Force: actually overwrite local dotfiles instead of just
    			printing what would be changed.

    -L LOCAL_PATH	Compare remote files to those in LOCAL_PATH, and
    			overwrite the files in LOCAL_PATH. (default: \$HOME)

    -R REMOTE_PATH	Compare local files to those in REMOTE_PATH/LABEL on
    			Manta. (default: /\$MANTA_USER/public/lib/dotfiles)

Arguments:

    LABEL		Specifies which group of dotfiles (under REMOTE_PATH) to
    			compare and copy.  This allows you to have different
			sets of dotfiles with different labels.
EOF
	exit 2
}

function fail
{
	echo "$arg0: $@" >&2
	exit 1
}

# Configuration and default options
df_unpackdir="$HOME"					# local copies
df_tmpdir="${TMPDIR-/var/tmp}/fetch-dotfiles.$$"	# temporary copies
df_mantaroot="/$MANTA_USER/public/lib/dotfiles"		# remote copies
df_label=						# dotfiles group
df_will="will"						# message text
df_dryrun="true"					# don't overwrite

while getopts ":fhL:R:" c; do
	case "$c" in
	h)	usage			;;
	L)	df_unpackdir="$OPTARG"	;;
	R)	df_mantaroot="$OPTARG"	;;
	f)	df_dryrun=false		;;
	*)
		echo "illegal option -- $OPTARG"
		usage
	esac
done

shift $(( OPTIND - 1 ))
[[ $# -eq 0 ]] && usage
df_label="$1"

if [[ $df_dryrun = "true" ]]; then
	df_will="would"
fi

echo "local path:  $df_unpackdir" >&2
echo "remote path: $df_mantaroot" >&2
echo "dry run:     $df_dryrun" >&2

mkdir -p $df_tmpdir || fail "failed to mkdir \"$df_tmpdir\""
cd $df_tmpdir || fail "failed to chdir \"$df_tmpdir\""

mfind -t o "$df_mantaroot/$df_label" | sort | while read mantapath; do
	relpath="${mantapath#$df_mantaroot/$df_label/}"
	localpath="$df_unpackdir/$relpath"

	mkdir -p "$(dirname "$relpath")"
	mget -q -o "$relpath" "$mantapath"

	if [[ ! -e "$localpath" ]]; then
		echo "$df_will take remote copy: $relpath " \
		    "(local file does not exist)" >&2
	elif diff -q "$localpath" "$relpath" > /dev/null; then
		echo "$df_will keep  local copy: $relpath (no changes)" >&2
		rm -f "$relpath"
	else
		echo "diffs (local -> remote) for $relpath" >&2
		diff "$localpath" "$relpath"
		echo "$df_will take remote copy: $relpath" >&2
	fi
done

if [[ $df_dryrun = "true" ]]; then
	echo "bailing out (dry run)"
	cd /
	rm -rf "$df_tmpdir"
	exit 0
fi

echo "committing changes ... " >&2

mkdir -p "$df_unpackdir" || fail "failed to mkdir \"$df_unpackdir\""
find . -type f | cut -c 3- | while read relpath; do
	echo "    cp $relpath $df_unpackdir/$relpath" >&2
	mkdir -p "$(dirname $relpath)" || fail "failed to mkdir"
	cp $relpath $df_unpackdir/$relpath || fail "failed to copy file"
done

echo "done." >&2
cd /
rm -rf $df_tmpdir
